print('1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.')

def division():
    a = float(input('s_1: '))
    b = float(input('s_2: '))
    if b == 0:
        print('Error, try again')
    else:
        print(f'Division {a} / {b} = {round((a / b), 4)}')

division()

print('\n2.Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. Осуществить вывод данных о пользователе одной строкой.')

def user(name, surname, year_of_birthday, city, email, phone):
    print(f'Registered new user: {name} {surname}, год рождения {year_of_birthday}, город проживания {city}, email {email}, телефон {phone}')

user('Maxim', 'Ivanov', 1965, 'Moscow', 'gftrufj@mail.ru', 78971232456)

print('\n3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.')

def my_func():
    a = float(input('s_1: '))
    b = float(input('s_2: '))
    c = float(input('s_3: '))
    m = min(a, b, c)
    sum = a + b + c
    print(f'Sum maksimumov: {sum - m}')

my_func()

print('\n4. Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). При решении задания необходимо обойтись без встроенной функции возведения числа в степень. Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. Второй — более сложная реализация без оператора **, предусматривающая использование цикла.')

print('\n1 version')
def my_func(x, y):
    total = x ** y
    return total

print(my_func(2, -5))

print('\n2 version')

def my_func(x, y):
    x1 = x
    for y in range(-y-1):
        x = x1 * x
        y = y + 1
    else:
        total = 1 / x
    return total

print(my_func(2, -5))

print('\n5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается. Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.')
res = 0
try:
    while True:
        res = res
        x = input("Enter numbers with space, for quit press 'q': ").split()
        for i in x:
            if i == "q" or i == "Q":
                break
            res = res + int(i)
        print(res)

except ValueError:
    print('Это не число. Выходим.')

print('\n6.Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text. Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().')
#nice авп ъghj jапро hjjпаро вапрghgh cool


def int_func(word):
    latin = 'qwertyuiopasdfghjklzxcvbnm'
    return word.title() if not set(word).difference(latin) else False

word = (input("фразу из маленьких латинских букв")).split()
for w in word:
    result = int_func(w)
    if result:
        print(int_func(w), ' ')
